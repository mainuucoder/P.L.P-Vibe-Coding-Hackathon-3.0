# Generated by Django 4.2.20 on 2025-08-30 13:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Age Group')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Age Groups',
            },
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('iso', models.CharField(blank=True, max_length=300, null=True)),
                ('nicename', models.CharField(blank=True, max_length=300, null=True)),
                ('iso3', models.CharField(blank=True, max_length=300, null=True)),
                ('numcode', models.CharField(blank=True, max_length=300, null=True)),
                ('phonecode', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Gender')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Marital Status',
                'verbose_name_plural': 'Marital Status',
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('constituency', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.constituency')),
            ],
        ),
        migrations.AddField(
            model_name='constituency',
            name='county',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.county'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('national_id', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('birth_date', models.CharField(blank=True, max_length=100, null=True, verbose_name='Date of Birth')),
                ('birth_certificate', models.CharField(blank=True, max_length=200, null=True, verbose_name='Birth Certificate Number')),
                ('new_ward', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ward')),
                ('age', models.CharField(blank=True, max_length=200, null=True, verbose_name='Age')),
                ('data_file', models.CharField(blank=True, max_length=200, null=True)),
                ('disability', models.CharField(blank=True, max_length=200, null=True, verbose_name='disability')),
                ('is_disabled', models.BooleanField(default=False)),
                ('profile', models.FileField(blank=True, null=True, upload_to='user_profiles/users')),
                ('banner', models.FileField(blank=True, null=True, upload_to='banners/users')),
                ('background', models.FileField(blank=True, null=True, upload_to='background/users')),
                ('next_of_kin_name', models.CharField(blank=True, max_length=500, null=True, verbose_name="Next of kin's name")),
                ('next_of_kin_email', models.CharField(blank=True, max_length=500, null=True, verbose_name="Next of kin's email")),
                ('next_of_kin_phone', models.CharField(blank=True, max_length=500, null=True, verbose_name="Next of kin's phone")),
                ('is_active', models.BooleanField(default=True)),
                ('is_banned', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('banned_by', models.CharField(blank=True, max_length=300, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=300, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_special_user', models.BooleanField(default=False)),
                ('is_organization_staff', models.BooleanField(default=False)),
                ('is_ict_admin', models.BooleanField(default=False, verbose_name='ICT Admin')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_graduate', models.BooleanField(default=False, verbose_name='Is Graduate')),
                ('is_employer', models.BooleanField(default=False, verbose_name='Is employer')),
                ('is_caretaker', models.BooleanField(default=False, verbose_name='Is Caretaker')),
                ('is_agent', models.BooleanField(default=False, verbose_name='Is agent')),
                ('is_landlord', models.BooleanField(default=False, verbose_name='Is landlord')),
                ('is_trainee', models.BooleanField(default=False, verbose_name='Is a  Trainee')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Is a  customer')),
                ('is_executive', models.BooleanField(default=False, verbose_name='Is a  Executive')),
                ('is_trainer', models.BooleanField(default=False, verbose_name='Is a Trainer')),
                ('is_lead_secretariat', models.BooleanField(default=False, verbose_name='Is a Lead secretariat')),
                ('is_secretariat', models.BooleanField(default=False, verbose_name='Is a secretariat')),
                ('is_evaluator', models.BooleanField(default=False, verbose_name='Is an evaluator')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Is a manager')),
                ('is_supervisor', models.BooleanField(default=False, verbose_name='Is a supervisor')),
                ('is_director', models.BooleanField(default=False, verbose_name='Is a director')),
                ('is_coordinator', models.BooleanField(default=False, verbose_name='Is a regional coordinator')),
                ('is_institution', models.BooleanField(default=False, verbose_name='Is a institution coordinator')),
                ('is_default_password', models.BooleanField(default=True, verbose_name='Default_password')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('age_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.age')),
                ('constituency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.constituency')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.country')),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.county')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.gender')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('marital_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.maritalstatus')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('ward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.ward')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
